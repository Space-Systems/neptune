name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Configure CMake OPI
      # Configure OPI
      run: cmake -S OPI -B ${{github.workspace}}/OPI/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/OPI/ -DENABLE_CXX11=ON -DENABLE_CL_SUPPORT=OFF -DENABLE_CUDA_SUPPORT=OFF -DENABLE_PYTHON=OFF
    
    - name: Build OPI
      # Build OPI
      run: cmake --build ${{github.workspace}}/OPI/build --config ${{env.BUILD_TYPE}}

    - name: Install OPI
      # Build OPI
      run: cmake --install ${{github.workspace}}/OPI/build --config ${{env.BUILD_TYPE}}

    - name: Configure CMake libslam
      # Configure libslam
      run: cmake -S libslam -B ${{github.workspace}}/libslam/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DENABLE_OpenMP_SUPPORT=OFF -DENABLE_POSTGRESQL_SUPPORT=OFF

    - name: Build libslam
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/libslam/build --config ${{env.BUILD_TYPE}}

    - name: Install libslam
      # install libs and includes in libslam/build/
      run: cmake --install ${{github.workspace}}/libslam/build --config ${{env.BUILD_TYPE}}

    - name: Configure CMake pFUnit
      # Configure pFUnit
      run: cmake -S pFUnit -B ${{github.workspace}}/pFUnit/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DENABLE_OpenMP_SUPPORT=OFF -DENABLE_POSTGRESQL_SUPPORT=OFF

    - name: Build pFUnit
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/pFUnit/build --config ${{env.BUILD_TYPE}}

    - name: Install pFUnit
      # install libs and includes in libslam/build/
      run: cmake --install ${{github.workspace}}/pFUnit/build --config ${{env.BUILD_TYPE}}

    - name: Link include and libs
      # Link all libs needed from libslam and OPI for neptune
      run: bash link-dependencies.sh 

    - name: Configure CMake neptune
      # Configure neptune 
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DENABLE_OPI_SUPPORT=ON -DCMAKE_PREFIX_PATH=${{github.workspace}}/pFUnit/build/installed/

    - name: Build neptune
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Install neptune
      # Build your program with the given configuration
      run: cmake --install ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: LD_LIBRARY_PATH=${{github.workspace}}/lib ctest -C ${{env.BUILD_TYPE}} --verbose
