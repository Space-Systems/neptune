!==============================================================================
!
!> @anchor  test_solarsystem
!!
!> @brief   Program for testing the function that calculates the Bodyposition 
!!
!> @author  Arkene Chouchene (AC)
!!
!> @date    <ul>
!!            <li>15.06.2023 (initial design)</li>
!!          </ul>
!!
!! @details Program for testing solarsystem functions in this case getBodyposition 
!! Sources and Examples are mentioned above every test
!------------------------------------------------------------------------
module test_solarsystem
    use funit
    use solarsystem
    use neptuneClass
    
    implicit none

    contains

   @test
   subroutine test_getBodyPosition()
        ! Reference Values : OREKIT
        type(Solarsystem_class):: solarsystem_model
        real(dp)        :: time_mjd, tolerance
        integer         :: body_id
        real(dp), dimension(3)      ::  expected_position, obtained_position
        type(time_t) :: epoch 
        
        ! Test 1 :
        epoch%mjd = 59600 
        solarsystem_model = Solarsystem_class()
        call solarsystem_model%initSolarSystem(   &
        "../../work/data",  &
        'DE-421',               &
         epoch &
        )
   
       ! Set Up inputs 
        body_id = 1
        time_mjd = 	59868.16721065
        ! Call the subroutine to be tested
        obtained_position = solarsystem_model%getBodyPosition(time_mjd, body_id)
            
        ! Set up expected outputs
        expected_position = (/-137833056.98029408, -52290137.284895524, -22666159.999092821/)
            
        ! Set up tolerances
        tolerance = 1e-6_dp
        
        ! Check if outputs match expected values
        @assertRelativelyEqual(expected_position, obtained_position, tolerance)
           
        
        ! Test 2 :
        epoch%mjd = 58600 
        solarsystem_model = Solarsystem_class()
        call solarsystem_model%initSolarSystem(   &
        "../../work/data",  &
        'DE-421',               &
         epoch &
        )
   
       ! Set Up inputs 
        body_id = 2
        time_mjd = 	58600.d0
        ! Call the subroutine to be tested
        obtained_position = solarsystem_model%getBodyPosition(time_mjd, body_id)
            
        ! Set up expected outputs
        expected_position = (/242037.66047749575, -291029.18822841981, -137196.91059160809/)
            
        ! Set up tolerances
        tolerance = 1e-6_dp
        
        ! Check if outputs match expected values
        @assertRelativelyEqual(expected_position, obtained_position, tolerance)

        ! Test 3 :
        epoch%mjd = 58600 
        solarsystem_model = Solarsystem_class()
        call solarsystem_model%initSolarSystem(   &
        "../../work/data",  &
        'DE-421',               &
         epoch &
        )
   
       ! Set Up inputs 
        body_id = 2
        time_mjd = 	58600.d0
        ! Call the subroutine to be tested
        obtained_position = solarsystem_model%getBodyPosition(time_mjd, body_id)
            
        ! Set up expected outputs
        expected_position = (/242037.66047749575, -291029.18822841981, -137196.91059160809/)
            
        ! Set up tolerances
        tolerance = 1e-6_dp
        
        ! Check if outputs match expected values
        @assertRelativelyEqual(expected_position, obtained_position, tolerance)



    end subroutine test_getBodyPosition


    

end module test_solarsystem